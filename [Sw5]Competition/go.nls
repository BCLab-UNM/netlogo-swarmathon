to go

  ; if all of the tags are collected, stop the model
  if count patches with [ pcolor = blue ] = 0
  [
    ask turtles [ set shape "robot" ]
    clear-drawing
    stop
  ]
  
  ask turtles
  [
    ifelse pen-down?
    [ pen-down ]
    [ pen-up ]

    if searching?
    [ search ]
    
    if returning?
    [ return-to-base ]
  ]

  tick

end

to check-for-tags

    if count neighbors in-radius 2 with [ pcolor = blue ] > 0
    [
      if searching?
      [
        ask one-of neighbors in-radius 2 with [ pcolor = blue ]
        [ set pcolor base-pcolor ]
        set shape "robot with rock"
        set searching? false
        set returning? true
      ]
    ]

end

to search

  ifelse (pxcor = min-pxcor) or (pxcor = max-pxcor) or 
         (pycor = min-pycor) or (pycor = max-pycor)
  [
    set searching? false
    set returning? true
  ]
  [
    check-for-tags
    forward travel-distance
    left random (turn-angle + 1)
    right random (turn-angle + 1)
  ]

end

to return-to-base

  ifelse count neighbors in-radius 2 with [ pcolor = green ] > 0 and
         distancexy 0 0 < 1.5
  [
    set shape "robot"
    set searching? true
    set returning? false
  ]
  [
    facexy 0 0
    forward travel-distance
  ]

end